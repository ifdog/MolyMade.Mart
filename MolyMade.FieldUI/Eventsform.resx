<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="listBox1.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAGBgAAAEAIACICQAAFgAAACgAAAAYAAAAMAAAAAEAIAAAAAAAAAkAACMuAAAjLgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANjV2gDb1uAA1tXVBNXU1AnW1dQH19XWAtbV
        1ADq5vIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANbU
        1ADZ1dwA1dTTFdXV003V1dOG1tXTq9bV07rW1dO21tXToNXV03PV1dM21dTTCNXV0wDX1NgAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADY1tcA1dTTANXU0xDV1dNp1tXTzNfW1PjZ2Nf/2tnY/9rZ
        2P/a2dj/2djY/9jX1v/W1tTu1tXTrdXV00HW1dQD1tXTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANbV
        1QDV1NIA1dTTKNbV07DX1tT72djY/9XUzf/Gxa7/t7aP/6+vf/+xsIL/urqW/8rJt//X1tL/2djX/9bV
        0+zV1dN81dTTDNXV0wAAAAAAAAAAAAAAAAAAAAAA19bWANXU0wDV1NMs1tXTydjX1v/X1tL/vLuZ/5qa
        Uf+Kii3/hYYh/4SFHv+EhR7/hoYi/4yNM/+hoWL/xsWu/9nY1v/X1tT61dXTkNXU0wvV1dMAAAAAAAAA
        AAAAAAAA1dTTANXU0xfW1dO72NfW/9TTyv+op2//iIgp/4aGHv+PkCz/oqNO/6+wZ/+vr2X/oKFL/46O
        Kf+Fhh7/jI00/7a1jP/Y19P/19bU+tXV03jW1NYB1tXUAAAAAADW1dQA2dXbAdXV04HX1tX+1tXP/6Wl
        av+GhiP/i4wl/7Gxaf/i4sj/8/Pn//Hx4f/x8eH/8/Pm/9/fwf+srGD/iYki/4iJK/+2to3/2dfW/9bV
        0+jV1NM71dTTANnX2ADV1NMA1dTTKdbV0+HZ2Nf/trWN/4eHJv+MjSf/w8SM//X16//X2Kf/srNT/6Sl
        M/+lpjX/tLVY/9vbsP/09Or/vLx//4mJIv+NjTX/xsav/9jX1v/V1dOj1tXUBdbV1ADV1NIA1dXTc9jX
        1f/Qz8T/k5ND/4aHHv+trWH/8/Pn/8HCdf+Zmxj/mZoR/5ucE/+anBP/mJkQ/5qcHP/Hx4P/9PTp/62t
        Y/+FhR7/o6Nl/9fW0//W1dPn1dXTLNXV0wDV1NQH1tXTstnY2P+7u5j/h4cm/4qLIP+cnDb/trdg/5qc
        Gf+cnRT/n6ET/6GjEP+hoxH/trdN/6ipNP+Zmhn/2dmr/+DgxP+Ojyv/jY02/8vLuv/X19X+1dXTY9XU
        0gDV1NMb1tXT1dnY1/+pqXH/hoch/4yNIP+Rkhn/lZYT/5udFf+goRP/pKYL/6iqCv/Gx2L/yMlx/6Kj
        G/+YmhH/sbJT//Pz5v+jo1D/hoYk/728m//Z2Nf/1dXTjtPTzwDV1NMq1tXT49jX1P+goF7/h4cg/42N
        Hv+UlRz/mJkW/52eFf+ipA//pqgB/8nKXP/Z2o3/qasQ/6CiEP+bnBP/oqMv//Dw3v+ys23/hIUf/7Oz
        iP/Z2Nf/1dXTpNjW2ALV1NMr1tXT5djX0/+fn13/hocf/5WWMP/Ozpn/sbJO/5udEv+ipA//pqkA/9HT
        df/Fx1T/pacC/6GiEf+bnBT/oaIt/+/v3P+0tHD/hIUe/7Oyhv/Z2Nf/1dXTptfV1wLV1NMe1tXT2dnY
        1v+mpmz/jI0s/9HRpv//////5+fJ/6eoL/+foRH/o6UG/8rLaf+/wEr/oqQI/5+hE/+ZmhL/ra5I//Pz
        5v+mp1f/hYYi/7q6lv/Z2Nf/1dXTk9LSzQDW1dQL1dXTu9nY2P+3to//jY4x/7GybP/w8OL/6OjM/6qr
        Pf+cnhP/n6AP/8HCYf+2uEb/nqAQ/5ydFP+YmRX/0NCY/+bn0P+SkjH/i4sx/8jItP/X19b/1dXTbNXU
        0gDU1NEA1dTTgNjX1v/NzL3/j486/4aHHf/AwIX/8vLj/7S1V/+XmRL/mZsQ/7a3U/+srjz/mZoQ/5eZ
        FP+6umb/9PTp/7e4dv+Fhh7/nZ1a/9XUz//W1dPu1dXTNtXU0wDV1NMA1dTTNdbV0+rZ2Nb/rq59/4aG
        I/+QkCz/0tKo//P05v/Hx4L/paY1/6GjLP+foSj/pqg5/8vMjf/19er/y8ub/4yNKP+Jii3/wL+i/9jX
        1//V1dOz1tXUCtbV1ADW1dQA1tXVBNXU05fX1tX/0tHI/5ycV/+FhiD/kJEt/8LCif/u7t//8fHi/+fo
        y//o6M3/8vLj/+zs2/+8vH//jY4p/4aGJP+srHr/19bT/9bV0/LV1NNN1dTSANjX1wD79/8A1dTTANXU
        0yXV1dPQ2NfW/87Nv/+dnVj/hoYj/4iIIP+ZmT3/s7Nt/8LDi//Cwor/sLFp/5aXOf+Ghx//iIgp/6qq
        df/U1M3/19bU/9XU05LW1dQG1tXTAAAAAAAAAAAA19XVANTU0gDV1NNC1dXT3tjX1v/S0cj/r69//5CQ
        Pf+GhiT/hIUd/4WFHf+FhR3/hIUe/4eHJ/+Wlkr/urqX/9bV0f/X1tT/1dTTrdXU0xbV1NMAAAAAAAAA
        AAAAAAAAAAAAANbV1ADR0swA1dTTQNXV087X1tX/2NfW/87Nv/+5uZT/qaly/6KiY/+jo2X/rKx6/7++
        oP/S0cj/2NfX/9bV1PjV1NOe1dTTGdXU0wDX1tcAAAAAAAAAAAAAAAAAAAAAAAAAAADX1dUA1NTRANXU
        0yHV1NOP1tXT5tfW1f7Z2Nf/2NfW/9jX1P/Y19X/2djX/9jX1//W1tT71dXTztXU02LW1dML1dTTAP//
        /wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANbV1ADW1dQD1dTTLNXU03PV1NOt1dXTzdbV
        09jV1dPW1dXTxNXU05rV1NNY1dTTF/rc/wDW1dQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA3NrcANDQzADW1dQF1tXUE9XU0x3V1dMa1tXUDtfW1gLW1dQAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/g/8A/AB/APgAHwDwAA8A4AAHAMAAAwCAAAMAgAABAIAA
        AQAAAAEAAAABAAAAAAAAAAAAAAABAAAAAQCAAAEAgAABAIAAAwDAAAMA4AAHAPAADwD4AB8A/AA/AP+B
        /wA=
</value>
  </data>
</root>